diff --git a/ui/app/pages/routes/routes.component.js b/ui/app/pages/routes/routes.component.js
index 1dc556a9828835e5a2581423a4966ad27d6c92c0..bd6ed03127536f62667709175af600f54c2f7bde 100644
--- a/ui/app/pages/routes/routes.component.js
+++ b/ui/app/pages/routes/routes.component.js
@@ -31,6 +31,7 @@ import AppHeader from '../../components/app/app-header'
 import UnlockPage from '../unlock-page'
 import Alerts from '../../components/app/alerts'
 import Asset from '../asset'
+import BraveNavigation from '../../../../brave/components/navigation'
 
 import {
   ADD_TOKEN_ROUTE,
@@ -217,52 +218,55 @@ export default class Routes extends Component {
       !submittedPendingTransactions.find(({ id }) => id === sidebarTransaction.id)
 
     return (
-      <div
-        className={classnames('app', { 'mouse-user-styles': isMouseUser })}
-        dir={textDirection}
-        onClick={() => setMouseUserState(true)}
-        onKeyDown={(e) => {
-          if (e.keyCode === 9) {
-            setMouseUserState(false)
-          }
-        }}
-      >
-        <Modal />
-        <Alert
-          visible={this.props.alertOpen}
-          msg={alertMessage}
-        />
-        { !this.hideAppHeader() && (
-          <AppHeader
-            hideNetworkIndicator={this.onInitializationUnlockPage()}
-            disabled={this.onConfirmPage()}
+      <div>
+        <BraveNavigation />
+        <div
+          className={classnames('app', { 'mouse-user-styles': isMouseUser })}
+          dir={textDirection}
+          onClick={() => setMouseUserState(true)}
+          onKeyDown={(e) => {
+            if (e.keyCode === 9) {
+              setMouseUserState(false)
+            }
+          }}
+        >
+          <Modal />
+          <Alert
+            visible={this.props.alertOpen}
+            msg={alertMessage}
+          />
+          { !this.hideAppHeader() && (
+            <AppHeader
+              hideNetworkIndicator={this.onInitializationUnlockPage()}
+              disabled={this.onConfirmPage()}
+            />
+          ) }
+          <Sidebar
+            sidebarOpen={sidebarIsOpen}
+            sidebarShouldClose={sidebarShouldClose}
+            hideSidebar={this.props.hideSidebar}
+            transitionName={sidebarTransitionName}
+            type={sidebarType}
+            sidebarProps={sidebar.props}
           />
-        ) }
-        <Sidebar
-          sidebarOpen={sidebarIsOpen}
-          sidebarShouldClose={sidebarShouldClose}
-          hideSidebar={this.props.hideSidebar}
-          transitionName={sidebarTransitionName}
-          type={sidebarType}
-          sidebarProps={sidebar.props}
-        />
-        <NetworkDropdown
-          provider={provider}
-          frequentRpcListDetail={frequentRpcListDetail}
-        />
-        <AccountMenu />
-        <div className="main-container-wrapper">
-          { isLoading && <Loading loadingMessage={loadMessage} /> }
-          { !isLoading && isLoadingNetwork && <LoadingNetwork /> }
-          { this.renderRoutes() }
+          <NetworkDropdown
+            provider={provider}
+            frequentRpcListDetail={frequentRpcListDetail}
+          />
+          <AccountMenu />
+          <div className="main-container-wrapper">
+            { isLoading && <Loading loadingMessage={loadMessage} /> }
+            { !isLoading && isLoadingNetwork && <LoadingNetwork /> }
+            { this.renderRoutes() }
+          </div>
+          {
+            isUnlocked
+              ? (
+                <Alerts />
+              )
+              : null
+          }
         </div>
-        {
-          isUnlocked
-            ? (
-              <Alerts />
-            )
-            : null
-        }
       </div>
     )
   }
