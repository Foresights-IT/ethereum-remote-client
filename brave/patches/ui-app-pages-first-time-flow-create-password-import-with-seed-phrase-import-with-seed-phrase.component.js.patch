diff --git a/ui/app/pages/first-time-flow/create-password/import-with-seed-phrase/import-with-seed-phrase.component.js b/ui/app/pages/first-time-flow/create-password/import-with-seed-phrase/import-with-seed-phrase.component.js
index b130889155fe645dfd0233616c642c72da8cb287..566deed56ea12b295fcb1844a6343995f2b36ac4 100644
--- a/ui/app/pages/first-time-flow/create-password/import-with-seed-phrase/import-with-seed-phrase.component.js
+++ b/ui/app/pages/first-time-flow/create-password/import-with-seed-phrase/import-with-seed-phrase.component.js
@@ -7,6 +7,7 @@ import {
   INITIALIZE_SELECT_ACTION_ROUTE,
   INITIALIZE_END_OF_FLOW_ROUTE,
 } from '../../../../helpers/constants/routes'
+import PasswordWarning from '../../../../../../brave/components/password-warning'
 
 export default class ImportWithSeedPhrase extends PureComponent {
   static contextTypes = {
@@ -29,7 +30,7 @@ export default class ImportWithSeedPhrase extends PureComponent {
     seedPhraseError: '',
     passwordError: '',
     confirmPasswordError: '',
-    termsChecked: false,
+    termsChecked: true,
   }
 
   parseSeedPhrase = (seedPhrase) => (seedPhrase || '').trim().toLowerCase().match(/\w+/gu)?.join(' ') || ''
@@ -191,139 +192,145 @@ export default class ImportWithSeedPhrase extends PureComponent {
     const { seedPhraseError, showSeedPhrase, passwordError, confirmPasswordError, termsChecked } = this.state
 
     return (
-      <form
-        className="first-time-flow__form"
-        onSubmit={this.handleImport}
-      >
-        <div className="first-time-flow__create-back">
-          <a
-            onClick={(e) => {
-              e.preventDefault()
-              this.context.metricsEvent({
-                eventOpts: {
-                  category: 'Onboarding',
-                  action: 'Import Seed Phrase',
-                  name: 'Go Back from Onboarding Import',
-                },
-                customVariables: {
-                  errorLabel: 'Seed Phrase Error',
-                  errorMessage: seedPhraseError,
-                },
-              })
-              this.props.history.push(INITIALIZE_SELECT_ACTION_ROUTE)
-            }}
-            href="#"
-          >
-            {`< Back`}
-          </a>
-        </div>
-        <div className="first-time-flow__header">
-          { t('importAccountSeedPhrase') }
-        </div>
-        <div className="first-time-flow__text-block">
-          { t('secretPhrase') }
-        </div>
-        <div className="first-time-flow__textarea-wrapper">
-          <label>{ t('walletSeed') }</label>
-          {showSeedPhrase ? (
-            <textarea
-              className="first-time-flow__textarea"
-              onChange={(e) => this.handleSeedPhraseChange(e.target.value)}
-              value={this.state.seedPhrase}
-              placeholder={t('seedPhrasePlaceholder')}
-            />
-          ) : (
-            <TextField
-              className="first-time-flow__textarea first-time-flow__seedphrase"
-              type="password"
-              onChange={(e) => this.handleSeedPhraseChange(e.target.value)}
-              value={this.state.seedPhrase}
-              placeholder={t('seedPhrasePlaceholderPaste')}
-            />
-          )}
-          <div className="first-time-flow__checkbox-container" onClick={this.toggleShowSeedPhrase}>
+      <div>
+        <form
+          className="first-time-flow__form"
+          onSubmit={this.handleImport}
+        >
+          <div className="first-time-flow__create-back">
+            <a
+              onClick={(e) => {
+                e.preventDefault()
+                this.context.metricsEvent({
+                  eventOpts: {
+                    category: 'Onboarding',
+                    action: 'Import Seed Phrase',
+                    name: 'Go Back from Onboarding Import',
+                  },
+                  customVariables: {
+                    errorLabel: 'Seed Phrase Error',
+                    errorMessage: seedPhraseError,
+                  },
+                })
+                this.props.history.push(INITIALIZE_SELECT_ACTION_ROUTE)
+              }}
+              href="#"
+            >
+              {`< Back`}
+            </a>
+          </div>
+          <div className="first-time-flow__header">
+            { t('importAccountSeedPhrase') }
+          </div>
+          <div className="first-time-flow__text-block">
+            { t('secretPhrase') }
+          </div>
+          <div className="first-time-flow__textarea-wrapper">
+            <label>{ t('walletSeed') }</label>
+            {showSeedPhrase ? (
+              <textarea
+                className="first-time-flow__textarea"
+                onChange={(e) => this.handleSeedPhraseChange(e.target.value)}
+                value={this.state.seedPhrase}
+                placeholder={t('seedPhrasePlaceholder')}
+              />
+            ) : (
+              <TextField
+                className="first-time-flow__textarea first-time-flow__seedphrase"
+                type="password"
+                onChange={(e) => this.handleSeedPhraseChange(e.target.value)}
+                value={this.state.seedPhrase}
+                placeholder={t('seedPhrasePlaceholderPaste')}
+              />
+            )}
+            <div className="first-time-flow__checkbox-container" onClick={this.toggleShowSeedPhrase}>
+              <div
+                className="first-time-flow__checkbox"
+                tabIndex="0"
+                role="checkbox"
+                onKeyPress={this.toggleShowSeedPhrase}
+                aria-checked={showSeedPhrase}
+                aria-labelledby="ftf-chk1-label"
+              >
+                {showSeedPhrase ? <i className="fa fa-check fa-2x" /> : null}
+              </div>
+              <span id="ftf-chk1-label" className="first-time-flow__checkbox-label">
+                { t('showSeedPhrase') }
+              </span>
+            </div>
+          </div>
+          {
+            seedPhraseError && (
+              <span className="error">
+                { seedPhraseError }
+              </span>
+            )
+          }
+          <TextField
+            id="password"
+            label={t('newPassword')}
+            type="password"
+            className="first-time-flow__input"
+            value={this.state.password}
+            onChange={(event) => this.handlePasswordChange(event.target.value)}
+            error={passwordError}
+            autoComplete="new-password"
+            margin="normal"
+            largeLabel
+          />
+          <TextField
+            id="confirm-password"
+            label={t('confirmPassword')}
+            type="password"
+            className="first-time-flow__input"
+            value={this.state.confirmPassword}
+            onChange={(event) => this.handleConfirmPasswordChange(event.target.value)}
+            error={confirmPasswordError}
+            autoComplete="confirm-password"
+            margin="normal"
+            largeLabel
+          />
+          <div className="first-time-flow__checkbox-container" onClick={this.toggleTermsCheck}>
             <div
-              className="first-time-flow__checkbox"
+              className="first-time-flow__checkbox first-time-flow__terms"
               tabIndex="0"
               role="checkbox"
-              onKeyPress={this.toggleShowSeedPhrase}
-              aria-checked={showSeedPhrase}
+              onKeyPress={this.onTermsKeyPress}
+              aria-checked={termsChecked}
               aria-labelledby="ftf-chk1-label"
             >
-              {showSeedPhrase ? <i className="fa fa-check fa-2x" /> : null}
+              {termsChecked ? <i className="fa fa-check fa-2x" /> : null}
             </div>
             <span id="ftf-chk1-label" className="first-time-flow__checkbox-label">
-              { t('showSeedPhrase') }
+              {t('acceptTermsOfUse', [(
+                <a
+                  onClick={(e) => e.stopPropagation()}
+                  key="first-time-flow__link-text"
+                  href="https://metamask.io/terms.html"
+                  target="_blank"
+                  rel="noopener noreferrer"
+                >
+                  <span className="first-time-flow__link-text">
+                    { t('terms') }
+                  </span>
+                </a>
+              )])}
             </span>
           </div>
-        </div>
-        {
-          seedPhraseError && (
-            <span className="error">
-              { seedPhraseError }
-            </span>
-          )
-        }
-        <TextField
-          id="password"
-          label={t('newPassword')}
-          type="password"
-          className="first-time-flow__input"
-          value={this.state.password}
-          onChange={(event) => this.handlePasswordChange(event.target.value)}
-          error={passwordError}
-          autoComplete="new-password"
-          margin="normal"
-          largeLabel
-        />
-        <TextField
-          id="confirm-password"
-          label={t('confirmPassword')}
-          type="password"
-          className="first-time-flow__input"
-          value={this.state.confirmPassword}
-          onChange={(event) => this.handleConfirmPasswordChange(event.target.value)}
-          error={confirmPasswordError}
-          autoComplete="confirm-password"
-          margin="normal"
-          largeLabel
-        />
-        <div className="first-time-flow__checkbox-container" onClick={this.toggleTermsCheck}>
-          <div
-            className="first-time-flow__checkbox first-time-flow__terms"
-            tabIndex="0"
-            role="checkbox"
-            onKeyPress={this.onTermsKeyPress}
-            aria-checked={termsChecked}
-            aria-labelledby="ftf-chk1-label"
+          <Button
+            type="primary"
+            submit
+            className="first-time-flow__button"
+            disabled={!this.isValid() || !termsChecked}
           >
-            {termsChecked ? <i className="fa fa-check fa-2x" /> : null}
-          </div>
-          <span id="ftf-chk1-label" className="first-time-flow__checkbox-label">
-            {t('acceptTermsOfUse', [(
-              <a
-                onClick={(e) => e.stopPropagation()}
-                key="first-time-flow__link-text"
-                href="https://metamask.io/terms.html"
-                target="_blank"
-                rel="noopener noreferrer"
-              >
-                <span className="first-time-flow__link-text">
-                  { t('terms') }
-                </span>
-              </a>
-            )])}
-          </span>
+            { t('import') }
+          </Button>
+        </form>
+        <div>
+          {t('metamaskImportSubText')}
         </div>
-        <Button
-          type="primary"
-          submit
-          className="first-time-flow__button"
-          disabled={!this.isValid() || !termsChecked}
-        >
-          { t('import') }
-        </Button>
-      </form>
+        <PasswordWarning />
+      </div>
     )
   }
 }
